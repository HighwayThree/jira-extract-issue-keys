name: Jira

on:
  push:
    branches:
      - 'testing'

jobs:
  deploy_jira_github:
    name: jira with github test
    runs-on: ubuntu-latest
    steps:  
      # https://stackoverflow.com/questions/60916931/github-action-does-the-if-have-an-else
      # - name: Assign Production Deploy State
      #   if: ${{ endsWith(github.ref, 'master') }} 
      #   run: |
      #     export DEPLOY_TYPE='production'       
      #     echo "DEPLOY_TYPE=$DEPLOY_TYPE" >> $GITHUB_ENV
      # - name: Assign Staging Deploy State
      #   if: ${{ !endsWith(github.ref, 'master') }} 
      #   run: |
      #     export DEPLOY_TYPE='staging'
      #     echo "DEPLOY_TYPE=$DEPLOY_TYPE" >> $GITHUB_ENV
      - name: Moar Vespene Gas
        - uses: actions/checkout@v1
        - uses: 8BitJonny/gh-get-current-pr@1.3.0
          id: PR
          with:
            github-token: ${{ secrets.GITHUB_TOKEN }}
            # Verbose setting SHA when using Pull_Request event trigger to fix #16
            sha: ${{ github.event.pull_request.head.sha }}
            # Only return if PR is still open
            filterOutClosed: true
        - run: echo "Your PR is ${prNumber} and its JSON is ${prJSON}"
          if: success() && steps.PR.outputs.number
          env:
            prNumber: ${{ steps.PR.outputs.number }}
            # JSON object with the full PR object
            prJSON: ${{ steps.PR.outputs.pr }}
            # Direct access to common PR properties
            prUrl: ${{ steps.PR.outputs.pr_url }}
            prTitle: ${{ steps.PR.outputs.pr_title }}
            prBody: ${{ steps.PR.outputs.pr_body }}
            prCreatedAt: ${{ steps.PR.outputs.pr_created_at }}
            prMergedAt: ${{ steps.PR.outputs.pr_merged_at }}
            prClosedAt: ${{ steps.PR.outputs.pr_closed_at }}
      - name: Deploy to ${{env.DEPLOY_TYPE}}
        run: |
          echo "Deploying to ${{env.DEPLOY_TYPE}}..."
          echo "github.event_name: ${{github.event_name}}"
          echo "github.ref: ${{github.ref}}"
          echo "github.ref_name: ${{github.ref_name}}"
          echo "github.head_ref: ${{github.head_ref}}"
          echo "github.base_ref: ${{github.base_ref}}"
          echo "DEPLOY_TYPE: ${{env.DEPLOY_TYPE}}"
          echo "DEPLOY_STATE=successful"  >> $GITHUB_ENV      
      - name: Parse Jira Keys from All Commits
        id: jira_keys
        if: always()
        uses: birdly/jira-extract-issue-keys@testing
        with:
          is-pull-request: ${{ github.event_name == 'pull_request' }}
          parse-all-commits: ${{ github.event_name == 'push' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Confirm Deploy State and Jira Key Values
        if: always()
        run: |
          echo "DEPLOY_STATE: ${{env.DEPLOY_STATE}}"
          echo "Jira Keys: ${{steps.jira_keys.outputs.jira-keys}}"
      # - name: Push Deployment Info to Jira
      #   if: steps.jira_keys.outputs.jira-keys != ''
      #   id: push_deployment_info_to_jira
      #   uses: HighwayThree/jira-upload-deployment-info@master
      #   with:
      #     client-id: '${{ secrets.JIRA_CLIENT_ID }}'
      #     client-secret: '${{ secrets.JIRA_CLIENT_SECRET }}'
      #     cloud-instance-base-url: '${{ secrets.JIRA_CLOUD_INSTANCE_BASE_URL }}'
      #     deployment-sequence-number: '${{ github.run_id }}'
      #     update-sequence-number: '${{ github.run_id }}'
      #     issue-keys: "${{ steps.jira_keys.outputs.jira-keys }}"
      #     display-name: '${{github.head_ref}}' # Change this PE-162
      #     url: "${{github.event.repository.url}}/actions/runs/${{github.run_id}}"
      #     description: "Test Deployment"
      #     last-updated: '${{github.event.head_commit.timestamp}}'
      #     label: 'Test Deployment Label'
      #     state: '${{env.DEPLOY_STATE}}'
      #     pipeline-id: '${{ github.repository }} ${{ github.workflow }}'
      #     pipeline-display-name: '${{ github.workflow }} (#${{ github.run_number }})'
      #     pipeline-url: '${{github.event.repository.url}}/actions/runs/${{github.run_id}}'
      #     environment-id: '${{github.ref}}'         
      #     environment-display-name: '${{env.DEPLOY_TYPE}}'     
      #     environment-type: '${{env.DEPLOY_TYPE}}'              # [production, staging, testing, development, unmapped]
      # - name: Confirm Jira Deploy Output
      #   if: success()
      #   run: |
      #     echo "Jira Upload Deploy Info response: ${{steps.push_deployment_info_to_jira.outputs.response}}"          
    